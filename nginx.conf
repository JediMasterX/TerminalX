# /etc/nginx/nginx.conf
# This provides DNS-based routing while keeping direct port access available

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    
    # Upstream definitions
    upstream terminalx_backend {
        server terminalx:8087;  # Docker service name and port
    }
    
    upstream sftp_backend {
        server sftp-server:3000;  # Docker service name and port
    }
    
    # TerminalX webapp server block (DNS-based routing)
    server {
        listen 80;
        server_name terminal.yourdomain.com terminalx.yourdomain.com;  # Replace with your DNS names
        
        # Client max body size for file uploads
        client_max_body_size 100M;
        
        location / {
            proxy_pass http://terminalx_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeout settings for long-running operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
        }
    }
    
    # SFTP server block (DNS-based routing)
    server {
        listen 80;
        server_name sftp.yourdomain.com files.yourdomain.com;  # Replace with your DNS names
        
        # Client max body size for file uploads
        client_max_body_size 100M;
        
        location / {
            proxy_pass http://sftp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for SFTP if needed
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
    
    # Default server block (for any unmatched domains on port 80)
    # This shows a simple page explaining both access methods
    server {
        listen 80 default_server;
        server_name _;
        
        location / {
            return 200 '<!DOCTYPE html>
<html><head><title>WebApp Access</title>
<style>body{font-family:Arial,sans-serif;max-width:600px;margin:50px auto;padding:20px;background:#f5f5f5;}
h1{color:#333;}a{color:#0066cc;text-decoration:none;}a:hover{text-decoration:underline;}
.access-method{background:white;padding:15px;margin:10px 0;border-radius:5px;border-left:4px solid #0066cc;}
</style></head><body>
<h1>üöÄ WebApp Services</h1>
<p>Multiple access methods available:</p>

<div class="access-method">
<h3>üì° TerminalX (SSH Management)</h3>
<p><strong>DNS Access:</strong> <a href="http://terminal.yourdomain.com">http://terminal.yourdomain.com</a></p>
<p><strong>Direct Port Access:</strong> <a href="http://YOURSERVERIP:8087">http://YOURSERVERIP:8087</a></p>
</div>

<div class="access-method">
<h3>üìÅ SFTP Browser</h3>
<p><strong>DNS Access:</strong> <a href="http://sftp.yourdomain.com">http://sftp.yourdomain.com</a></p>
<p><strong>Direct Port Access:</strong> <a href="http://YOURSERVERIP:3000">http://YOURSERVERIP:3000</a></p>
</div>

<p><small>Both DNS and direct port access methods work simultaneously.</small></p>
</body></html>';
            add_header Content-Type text/html;
        }
    }
    
    # Optional: HTTPS configuration (add when you get SSL certificates)
    # server {
    #     listen 443 ssl http2;
    #     server_name terminal.yourdomain.com terminalx.yourdomain.com;
    #     
    #     ssl_certificate /path/to/your/certificate.crt;
    #     ssl_certificate_key /path/to/your/private.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     location / {
    #         proxy_pass http://terminalx_backend;
    #         # ... same proxy settings as above
    #     }
    # }
    
    # server {
    #     listen 443 ssl http2;
    #     server_name sftp.yourdomain.com files.yourdomain.com;
    #     
    #     ssl_certificate /path/to/your/certificate.crt;
    #     ssl_certificate_key /path/to/your/private.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     location / {
    #         proxy_pass http://sftp_backend;
    #         # ... same proxy settings as above
    #     }
    # }
}